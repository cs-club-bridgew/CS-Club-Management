<!DOCTYPE html>
<html lang="en">
<head>
    <!-- NO CACHE! -->
    <meta http-equiv="cache-control" content="max-age=0">
    <meta http-equiv="cache-control" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 11:00:00 GMT">
    <meta http-equiv="pragma" content="no-cache">
    <meta charset="UTF-8">
    <link rel="icon" type="image/x-icon" href="/invoices/favicon.ico">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Financial Record</title>
    <script src="/invoices/invUtils.js"></script>

    <script>

        


        function UpdateApproverBox(){
            if(document.getElementById("IT3").checked && !document.getElementById("S5").checked){
                let approve_box = document.getElementById("approver")
                approve_box.value = "SGA Finance Board"
                approve_box.disabled = true;
                document.getElementById("RA1").value = ""
                document.getElementById("RA2").value = ""
                document.getElementById("RA3").value = ""
                document.getElementById("RA4").value = ""
                document.getElementById("addrDropdown").value = "SGA Budget"

                document.getElementById("RA1").disabled = true
                document.getElementById("RA2").disabled = true
                document.getElementById("RA3").disabled = true
                document.getElementById("RA4").disabled = true
                document.getElementById("addrDropdown").disabled = true


            } else if (document.getElementById("IT3").checked && document.getElementById("S5").checked){
                let approve_box = document.getElementById("approver")
                approve_box.value = ""
                approve_box.disabled = true;
            } else{
                let approve_box = document.getElementById("approver")
                approve_box.value = ""
                approve_box.disabled = false;
                if(document.getElementById("addrDropdown").value == "SGA Budget"){
                    document.getElementById("RA1").disabled = false
                    document.getElementById("RA2").disabled = false
                    document.getElementById("RA3").disabled = false
                    document.getElementById("RA4").disabled = false
                    document.getElementById("addrDropdown").disabled = false
                
                    document.getElementById("addrDropdown").value = "New Address"
                }
            }
        }

        function UpdateBoxes(){
            let date = new Date()
            document.getElementById("createDate").value = `${date.getFullYear()}-${date.getMonth()+1 < 10 ? 0 : ""}${date.getMonth()+1}-${date.getDate()+1 < 10 ? 0 : ""}${date.getDate()}`;

            document.getElementById("ID").value = '{{id}}'
            document.getElementById("addrDropdown").value = 'New Address'

            // Populate the address dropdown box
            {% for item in valid_addr %}
                addresses.push(new Address("{{item[5]}}", "{{item[1]}}", "{{item[2]}}", "{{item[3]}}", "{{item[4]}}"))
            {% endfor %}

        }

        function getDate(){
            let date = new Date(document.getElementById("createDate").value)
            // Format the date as DD MMM YYYY

            let month = date.getMonth()
            let day = date.getDate()
            let year = date.getFullYear()
            let months = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]
            return `${day} ${months[month]}, ${year}`
        }

        function formatPrice(price){
            let dollars = `${price}`.split(".")[0]
            let cents = `${price}`.split(".")[1]
            if(cents == undefined){
                cents = "00"
            }
            if(cents.length == 1){
                cents += "0"
            }
            return `${dollars}.${cents}`
        }

        function submit(){
            if(document.getElementById("addrDropdown").value == ""){
                alert("Please enter a valid address or select one from the dropdown")
                document.getElementById("addrDropdown").value = "New Address"
                return
            }
            if(getDate() == "NaN undefined, NaN"){
                alert("Please enter a valid date")
                return
            }
            let post_data = {
                "id": document.getElementById("ID").value,
                "date": getDate(),
                "creator": document.getElementById("creator").value,
                "approver": document.getElementById("approver").value,
                "type": getCurrentType(),
                "return_addr": [
                    document.getElementById("RA1").value,
                    document.getElementById("RA2").value,
                    document.getElementById("RA3").value,
                    document.getElementById("RA4").value
                ],
                "li": [
                    
                ],
                "tax": formatPrice(document.getElementById("taxes").value),
                "fees": formatPrice(document.getElementById("fees").value),
                "total": formatPrice(document.getElementById("total").value),
                "status": getCurrentStatus()
            }
            post_data["addr_desc"] = document.getElementById("addrDropdown").value == "New Address" ? prompt("Enter an address description: ") : document.getElementById("addrDropdown").value
            let table = document.getElementById("products")
            for(let i = 1; i < table.rows.length; i++){
                let item = {
                    "line": i,
                    "desc": document.getElementById(`prod${i}`).value,
                    "ammt": formatPrice(document.getElementById(`price${i}`).value),
                    "qty": document.getElementById(`qty${i}`).value,
                    "total": formatPrice(document.getElementById(`price${i}`).value * document.getElementById(`qty${i}`).value)
                }
                post_data.li.push(item)
            }
            console.log(post_data)
            let xhr = new XMLHttpRequest()
            xhr.open("POST", "/invoices/new/")
            xhr.setRequestHeader("Content-Type", "application/json")
            xhr.send(JSON.stringify(post_data))
            xhr.onreadystatechange = function(){
                if(xhr.readyState == 4){
                    if(xhr.status == 201){
                        alert("Record Created")
                        window.location.href = "/"
                    } else{
                        alert("Error Creating Record")
                    }
                }
            }
        }

        function AddRow(){
            let table = document.getElementById("products")
            let rowID = table.rows.length
            console.log(rowID)
            let row = table.insertRow()
            row.insertCell().innerText = rowID
            row.insertCell().innerHTML = `<input type="text" id="prod${rowID}">`
            row.insertCell().innerHTML = `<input type="text" id="price${rowID}" onChange="updateTotal()">`
            row.insertCell().innerHTML = `<input type="text" id="qty${rowID}" onChange="updateTotal()">`
            row.insertCell().innerHTML = `<button onClick="removeRow(${rowID})">x</button>`
        }

        function preview(){

            if(getDate() == "NaN undefined, NaN"){
                alert("Please enter a valid date")
                return
            }
    
            let post_data = {
                "id": document.getElementById("ID").value,
                "date": getDate(),
                "creator": document.getElementById("creator").value,
                "approver": document.getElementById("approver").value,
                "type": document.getElementById("IT1").checked ? "invoice" : document.getElementById("IT2").checked ? "c_invoice" : "sga_budget",
                "return_addr": [
                    document.getElementById("RA1").value,
                    document.getElementById("RA2").value,
                    document.getElementById("RA3").value,
                    document.getElementById("RA4").value],
                "li": [
                    
                ],
                "tax": formatPrice(document.getElementById("taxes").value),
                "fees": formatPrice(document.getElementById("fees").value),
                "total": formatPrice(document.getElementById("total").value),
                "status": document.getElementById("S1").checked ? "open" : document.getElementById("S2").checked ? "paid" : document.getElementById("S3").checked ? "closed" : document.getElementById("S4").checked ? "granted" : document.getElementById("S5").checked ? "pending" : "cancelled"
            }
    
            let table = document.getElementById("products")
            for(let i = 1; i < table.rows.length; i++){
                let item = {
                    "line": i,
                    "desc": document.getElementById(`prod${i}`).value,
                    "ammt": formatPrice(document.getElementById(`price${i}`).value),
                    "qty": document.getElementById(`qty${i}`).value,
                    "total": formatPrice(document.getElementById(`price${i}`).value * document.getElementById(`qty${i}`).value)
                }
                post_data.li.push(item)
            }
            let xhr = new XMLHttpRequest()
            xhr.open("POST", "/invoices/preview")
            xhr.setRequestHeader("Content-Type", "application/json")
            xhr.send(JSON.stringify(post_data))
            xhr.onreadystatechange = function(){
                if(xhr.readyState == 4){
                    if(xhr.status == 200){
                        let win = window.open("", "Preview", "width=800,height=600")
                        win.document.write(xhr.responseText)
                    } else{
                        alert("Error Previewing Record")
                    }
                }
            }
    
        }

        function updateTotal(){
            // Iterate through the table and calculate the total
            let table = document.getElementById("products")
            let total = 0
            for(let i = 1; i < table.rows.length; i++){
                console.error(i)
                let price = parseFloat(document.getElementById(`price${i}`).value)
                let qty = parseFloat(document.getElementById(`qty${i}`).value)
                
                total += isNaN(price) || isNaN(qty) ? 0 : price * qty
            }
            // Add on the taxes and fees
            let tax = parseFloat(document.getElementById("taxes").value)
            let fees = parseFloat(document.getElementById("fees").value)

            total += isNaN(tax) ? 0 : tax
            total += isNaN(fees) ? 0 : fees

            // Update the total box
            document.getElementById("total").value = formatPrice(total)

        }

        function removeRow(rowID){
            let table = document.getElementById("products")
            table.deleteRow(rowID)

            // Go through the table and update the line IDs
            for(let i = rowID; i < table.rows.length; i++){
                table.rows[i].cells[0].innerText = i
                table.rows[i].cells[4].innerHTML = `<button onClick="removeRow(${i})">x</button>`
            }
        }

        function updateAddressFromDropdown(){

            let box_text = document.getElementById("addrDropdown").value

            if(box_text == "New Address"){
                document.getElementById("RA1").value = ""
                document.getElementById("RA1").disabled = false
                document.getElementById("RA2").value = ""
                document.getElementById("RA2").disabled = false
                document.getElementById("RA3").value = ""
                document.getElementById("RA3").disabled = false
                document.getElementById("RA4").value = ""
                document.getElementById("RA4").disabled = false
                return;
            } else {
                document.getElementById("RA1").disabled = true
                document.getElementById("RA2").disabled = true
                document.getElementById("RA3").disabled = true
                document.getElementById("RA4").disabled = true
            }

            addresses.forEach( elt => {
                if(elt.desc == box_text){
                    document.getElementById("RA1").value = elt.addr1
                    document.getElementById("RA2").value = elt.addr2
                    document.getElementById("RA3").value = elt.addr3
                    document.getElementById("RA4").value = elt.addr4
                }
            
            })
        }

        function getCreatorUser(){
            current_user_id = "{{current_user}}"
            userID = prompt("Enter Creator User ID", current_user_id)
            // New XHR Request to /get_user_name/<userID>
            let xhr = new XMLHttpRequest()
            xhr.open("GET", `/get_user_name/${userID}`)
            xhr.send()
            xhr.onreadystatechange = function(){
                if(xhr.readyState == 4){
                    if(xhr.status == 200){
                        document.getElementById("creator").value = xhr.responseText
                        creatorID = userID
                        if(creatorID == approverID){
                            alert("Approver cannot be the same as the creator")
                            document.getElementById("approver").value = ""
                            approverID = ""
                        }
                    } else{
                        alert("Error Getting User")
                    }
                }
            }
        }
        
        

    </script>
</head>
<body onload="UpdateBoxes()">
    <h1>New Record</h1>
    <fieldset id="RAddr">
        <legend>Remit Address</legend>
        <select name="addrDropdown" id="addrDropdown" onchange="updateAddressFromDropdown()">
    {% for item in valid_addr %}
                <option value="{{item[5]}}">{{item[5]}}</option>
            {% endfor %}

            <option value="New Address">New Address</option>
        </select>
        <br>
        <input type="text" id="RA1"> <br>
        <input type="text" id="RA2"> <br>
        <input type="text" id="RA3"> <br>
        <input type="text" id="RA4">
    </fieldset>
    <fieldset id="Type">
        <legend>Record Type</legend>
        {% for valid_type in valid_types %}
            <input type="radio" name="types" id="{{valid_type}}" onchange="updateIfSGA()"> <label for="{{valid_type}}">{{valid_type}}</label><br/>
        {% endfor %}
    </fieldset>   
    <fieldset>
        <legend>Record Settings</legend>
        <label for="ID">Record ID</label>
        <input type="text" name="ID" id="ID" disabled> <button onclick="document.getElementById('ID').value=prompt('Enter an ID');">Change ID</button> <br>
        <label for="creator">Created By:</label>
        <input type="text" id="creator" disabled> <button onclick="getCreatorUser()">Get User</button><br>
        <label for="approver">Approved By:</label>
        <input type="text" id="approver" disabled><button id="approverBtn" onclick="getApproverUser()">Get User</button><br>
        <label for="createDate">Creation Date</label>
        <input type="date" name="createDate" id="createDate">
    </fieldset>
    <fieldset>
        <legend>Status</legend>
        {% for valid_status in valid_statuses %}
            <input type="radio" name="statusSelect" id="{{valid_status}}" onchange="updateIfSGA()"> <label for="{{valid_status}}">{{valid_status}}</label><br/>
        {% endfor %}
        
    </fieldset>
    <fieldset>
        <legend>Items</legend>
        <table id="products">
            <tr>
                <th>Line</th>
                <th>Item Description</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Remove</th>
            </tr>
                {% for product in li %}
            <tr>
                    <td>{{product.line}}</td>
                    {%  assign lineTotal = product.ammt |  times: product.qty %}
                    <td><input type='text' onchange='updateTotal()' id='prod{{product.line}}' value="{{product.desc}}"></td>
                    <td><input type='number' onchange='updateTotal()' id="price{{product.line}}" value="{{product.ammt}}"></td>
                    <td><input type='number' onchange='updateTotal()' id="qty{{product.line}}" value="{{product.qty}}"></td>
                    <td><button onclick="RemoveRow({{product.line}})" title="Cannot remove existing items" disabled>x</button></td>
            </tr>
                {% endfor %}
        </table>
        <button onclick="AddRow()">Add Line</button> <br>
        <label for="taxes">Taxes:</label>
        <input type="text" id="taxes" onChange="updateTotal()"> <br>
        <label for="fees">Fees:</label>
        <input type="text" id="fees" onChange="updateTotal()"> <br>
        <label for="total">Total:</label>
        <input type="text" id="total" disabled>
    </fieldset>
    <button onclick="submit()">Create</button>
    <button onclick="preview()">Preview</button>
</body>
<style>
    html{
        background-color:gray;
    }
    #RAddr{
        width: 25%;
    }
    #RA1, #RA2, #RA3, #RA4{
        width: 97%;
    }
    #Type{
        width: 30%;
    }
</style>
</html>
